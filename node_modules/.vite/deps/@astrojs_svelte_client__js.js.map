{
  "version": 3,
  "sources": ["../../@astrojs/svelte/dist/client.svelte.js"],
  "sourcesContent": ["import { createRawSnippet, hydrate, mount, unmount } from \"svelte\";\r\nconst existingApplications = /* @__PURE__ */ new WeakMap();\r\nvar client_svelte_default = (element) => {\r\n  return async (Component, props, slotted, { client }) => {\r\n    if (!element.hasAttribute(\"ssr\")) return;\r\n    let children = void 0;\r\n    let _$$slots = void 0;\r\n    let renderFns = {};\r\n    for (const [key, value] of Object.entries(slotted)) {\r\n      _$$slots ??= {};\r\n      if (key === \"default\") {\r\n        _$$slots.default = true;\r\n        children = createRawSnippet(() => ({\r\n          render: () => `<astro-slot>${value}</astro-slot>`\r\n        }));\r\n      } else {\r\n        _$$slots[key] = createRawSnippet(() => ({\r\n          render: () => `<astro-slot name=\"${key}\">${value}</astro-slot>`\r\n        }));\r\n      }\r\n      if (key === \"default\") {\r\n        renderFns.children = createRawSnippet(() => ({\r\n          render: () => `<astro-slot>${value}</astro-slot>`\r\n        }));\r\n      } else {\r\n        renderFns[key] = createRawSnippet(() => ({\r\n          render: () => `<astro-slot name=\"${key}\">${value}</astro-slot>`\r\n        }));\r\n      }\r\n    }\r\n    const resolvedProps = {\r\n      ...props,\r\n      children,\r\n      $$slots: _$$slots,\r\n      ...renderFns\r\n    };\r\n    if (existingApplications.has(element)) {\r\n      existingApplications.get(element).setProps(resolvedProps);\r\n    } else {\r\n      const component = createComponent(Component, element, resolvedProps, client !== \"only\");\r\n      existingApplications.set(element, component);\r\n      element.addEventListener(\"astro:unmount\", () => component.destroy(), { once: true });\r\n    }\r\n  };\r\n};\r\nfunction createComponent(Component, target, props, shouldHydrate) {\r\n  let propsState = $state(props);\r\n  const bootstrap = shouldHydrate ? hydrate : mount;\r\n  if (!shouldHydrate) {\r\n    target.innerHTML = \"\";\r\n  }\r\n  const component = bootstrap(Component, { target, props: propsState });\r\n  return {\r\n    setProps(newProps) {\r\n      Object.assign(propsState, newProps);\r\n      for (const key in propsState) {\r\n        if (!(key in newProps)) {\r\n          delete propsState[key];\r\n        }\r\n      }\r\n    },\r\n    destroy() {\r\n      unmount(component);\r\n    }\r\n  };\r\n}\r\nexport {\r\n  client_svelte_default as default\r\n};\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;IACM,uBAAoB,oBAAuB,QAAO;IACpD,wBAAqB,CAAI,YAAY;gBACzB,WAAW,OAAO,SAAO,EAAI,OAAM,MAAO;SACjD,QAAQ,aAAa,KAAK,EAAA;QAC3B,WAAQ;QACR,WAAQ;QACR,YAAS,CAAA;gBACD,KAAK,KAAK,KAAK,OAAO,QAAQ,OAAO,GAAG;AAClD,8BAAQ,CAAA;UACJ,QAAQ,WAAW;AACrB,iBAAS,UAAU;AACnB,mBAAW,iBAAgB,OAAA,EACzB,QAAM,MAAA,eAAuB,KAAK,gBAAA,EAAA;MAEtC,OAAO;AACL,iBAAS,GAAG,IAAI,iBAAgB,OAAA;UAC9B,QAAM,MAAA,qBAA6B,GAAG,KAAK,KAAK;;MAEpD;UACI,QAAQ,WAAW;AACrB,kBAAU,WAAW,iBAAgB,OAAA,EACnC,QAAM,MAAA,eAAuB,KAAK,gBAAA,EAAA;MAEtC,OAAO;AACL,kBAAU,GAAG,IAAI,iBAAgB,OAAA;UAC/B,QAAM,MAAA,qBAA6B,GAAG,KAAK,KAAK;;MAEpD;IACF;UACM,gBAAa,EAAA,GACd,OACH,UACA,SAAS,UAAQ,GACd,UAAS;QAEV,qBAAqB,IAAI,OAAO,GAAG;AACrC,2BAAqB,IAAI,OAAO,EAAE,SAAS,aAAa;IAC1D,OAAO;YACC,YAAY,gBAAgB,WAAW,SAAS,eAAe,WAAW,MAAM;AACtF,2BAAqB,IAAI,SAAS,SAAS;AAC3C,cAAQ,iBAAiB,iBAAe,MAAQ,UAAU,QAAO,GAAA,EAAM,MAAM,KAAI,CAAA;IACnF;EACF;AACF;SACS,gBAAgB,WAAW,QAAQ,OAAO,eAAe;MAC5D,aAAU,MAAU,KAAK;QACvB,YAAY,gBAAgB,UAAU;OACvC,eAAe;AAClB,WAAO,YAAY;EACrB;QACM,YAAY,UAAU,WAAS,EAAI,QAAQ,OAAO,WAAU,CAAA;;IAEhE,SAAS,UAAU;AACjB,aAAO,OAAO,YAAY,QAAQ;iBACvB,OAAO,YAAY;cACtB,OAAO,WAAW;iBACf,WAAW,GAAG;QACvB;MACF;IACF;IACA,UAAU;AACR,cAAQ,SAAS;IACnB;;AAEJ;",
  "names": []
}
